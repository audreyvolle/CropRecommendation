# Install all the required packages (if not already installed)
install.packages("Rtsne")
install.packages("ggplot2")
# Load the required packages
library(Rtsne)
library(ggplot2)
# Load the CSV file into a data frame
getwd()
setwd("/Users/audreyvolle/Desktop/School/MachineLearning/CropRecommendation/")
your_data <- read.csv("Crop_recommendation.csv")
# Perform t-SNE on your data
tsne_out <- Rtsne(as.matrix(your_data[, c("N", "P", "K", "temperature")]))
# Perform t-SNE on your data
tsne_out <- Rtsne(as.matrix(your_data[, c("N", "P", "K", "temperature")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# Perform t-SNE on your data
tsne_out <- Rtsne(as.matrix(your_data[, c("N", "P", "K", "temperature", "humidity" , "ph", "rainfall")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
clusters <- hclust(dist(your_data[, 3:4]))
# Load the CSV file into a data frame
getwd()
setwd("/Users/audreyvolle/Desktop/School/MachineLearning/CropRecommendation/")
your_data <- read.csv("Crop_recommendation.csv")
clusters <- hclust(dist(your_data[, 3:4]))
plot(clusters)
clusterCut <- cutree(clusters, 3)
# Load the CSV file into a data frame
getwd()
setwd("/Users/audreyvolle/Desktop/School/MachineLearning/CropRecommendation/")
your_data <- read.csv("Crop_recommendation.csv")
# Perform t-SNE on your data
tsne_out <- Rtsne(as.matrix(your_data[, c("N", "P", "K", "temperature", "humidity" , "ph", "rainfall")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
#
tsne_out <- Rtsne(as.matrix(your_data[, c("humidity" , "ph", "rainfall")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
#
tsne_out <- Rtsne(as.matrix(your_data[, c("N", "P", "K")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# soil characteristics
tsne_out <- Rtsne(as.matrix(your_data[, c("N", "P", "K", "ph")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# weather conditions
tsne_out <- Rtsne(as.matrix(your_data[, c("humidity", "rainfall")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# weather conditions
tsne_out <- Rtsne(as.matrix(your_data[, c("humidity", "rainfall", "temperature")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# one feature
# soil characteristics
tsne_out <- Rtsne(as.matrix(your_data[, c("ph")]))
# Create a data frame for t-SNE output
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
# Add 'label' column from the original data to tsne_plot
tsne_plot$label <- your_data$label
# Plotting the t-SNE plot using ggplot2
ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle("t-SNE Visualization") +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# Install and load required packages (if not already installed)
if (!requireNamespace("Rtsne", quietly = TRUE)) {
install.packages("Rtsne")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(Rtsne)
library(ggplot2)
# Load the CSV file into a data frame
your_data <- read.csv("Crop_recommendation.csv")
# Define different combinations of features
feature_combinations <- list(
c("N", "P", "K", "temperature"),
c("N", "P", "K", "temperature", "humidity", "ph", "rainfall"),
c("humidity", "ph", "rainfall"),
c("N", "P", "K", "ph"),
c("humidity", "rainfall", "temperature"),
c("ph"),
c("N", "P", "temperature", "humidity", "ph", "rainfall"),
c("N", "K", "temperature", "humidity", "ph", "rainfall"),
c("P", "K", "temperature", "humidity", "ph", "rainfall"),
c("N", "P", "K", "temperature", "humidity", "ph", "rainfall")
)
# Create and save t-SNE plots for different feature combinations
for (i in 1:length(feature_combinations)) {
tsne_out <- Rtsne(as.matrix(your_data[, feature_combinations[[i]]]))
tsne_plot <- data.frame(x = tsne_out$Y[, 1], y = tsne_out$Y[, 2])
tsne_plot$label <- your_data$label
plot_title <- paste("t-SNE Visualization - Features:", paste(feature_combinations[[i]], collapse = ", "))
# Save the plot as an image file (optional)
g <- ggplot(tsne_plot, aes(x = x, y = y, color = label)) +
geom_point(size = 3) +
theme_minimal() +
ggtitle(plot_title) +
xlab("t-SNE Dimension 1") +
ylab("t-SNE Dimension 2")
# Save the plot as an image file (optional)
ggsave(paste0("tsne_plot_", i, ".png"), plot = g, width = 8, height = 6)
# Print the plot (optional, can be removed if saving as an image)
print(g)
}
#set data matrices
cropData <- read.csv("Crop_recommendation.csv")
noLabelData <- cropData[, 1:7]
environmentFeatures <- cropData[, c(4,5,7)]
envpH <- cropData[, 4:7]
npkt <- cropData[, 1:4]
scaledData <- scale(noLabelData)
scaledEnvi <- scale(environmentFeatures)
scaledEnvpH <- scale(envpH)
scaledNPKT <- scale(npkt)
#FULL DATASET
#cluster
allFeatures.hc <- hclust(dist(scaledData), method = "average")
#cut
allFeatures.clusters <- cutree(allFeatures.hc, 22)
#compare
full.dist <- table(allFeatures.clusters, cropData[,8])
prop.table(t(full.dist), margin = 1)
#ENVIRONMENT FEATURES
#cluster
envi.hc <- hclust(dist(scaledEnvi), method = "average")
